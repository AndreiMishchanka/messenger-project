Index: src/main/java/Application/Scenes/ChatView/ChatViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Application.Scenes.ChatView;\r\n\r\nimport Data.*;\r\nimport Utills.LoadXML;\r\nimport javafx.beans.value.ObservableValue;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.VPos;\r\nimport javafx.scene.canvas.Canvas;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.ScrollPane;\r\nimport javafx.scene.control.ScrollPane.ScrollBarPolicy;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.text.Font;\r\n\r\nimport java.lang.reflect.Field;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\n\r\nimport Application.StartApplication;\r\n\r\nimport static Data.Database.getMessages;\r\nimport static Data.Database.sendMessage;\r\n\r\npublic class ChatViewController {\r\n\r\n    @FXML\r\n    private VBox fieldForMessages;\r\n    @FXML\r\n    private ScrollPane messagesList;\r\n    @FXML\r\n    private Button usersNick;\r\n    @FXML\r\n    public VBox chats;\r\n    @FXML\r\n    public TextField searchInChats;\r\n    @FXML\r\n    public ScrollPane scrolling;\r\n    @FXML\r\n    private TextField textOfSending;\r\n    @FXML\r\n    private Button sendMessageButton;\r\n    @FXML\r\n    private ImageView friendAvatar;\r\n\r\n    static User currentFriend = null;\r\n\r\n    public void makeChatToUser(User currentUser) throws Exception {        \r\n        friendAvatar = new ImageView(StartApplication.class.getResource(\"Images/default.png\").toString());\r\n        // friendAvatar.setLocation\r\n        currentFriend = currentUser;\r\n        usersNick.setText(currentFriend.getNickname());\r\n        fieldForMessages.getChildren().removeAll(fieldForMessages.getChildren());\r\n        printMessages();\r\n        // messagesList.heightProperty().addListener(observable -> messagesList.setVvalue(1D));\r\n    }\r\n\r\n    void refresh() {\r\n\r\n    }\r\n\r\n    Label makeMessage(ArrayList < Message > currentMessage) {\r\n        StringBuilder text = new StringBuilder();\r\n        if (Objects.equals(currentMessage.get(0).getText(), \"|0|\")) {\r\n            text.append(\"You\");\r\n        } else {\r\n            text.append(currentFriend.getNickname());\r\n        }\r\n        text.append(\" (\" + currentMessage.get(1).getTime() + \") : \" + currentMessage.get(1).getText());\r\n        Label textMessage = new Label(text.toString());\r\n        textMessage.setFont(Font.font(\"Arial\", 15));\r\n        textMessage.setWrapText(true);\r\n        return textMessage;\r\n    }\r\n\r\n    void printMessages() throws Exception {\r\n        ArrayList< ArrayList < Message > > currentMessages = getMessages(currentFriend.getNickname());\r\n        Label emptyChatLabel = new Label();\r\n        fieldForMessages.getChildren().add(emptyChatLabel);\r\n        if (currentMessages == null || currentMessages.isEmpty()) {\r\n            emptyChatLabel.setText(\"Start a conversation! Write first message to \" + currentFriend.getNickname() + '!');\r\n            emptyChatLabel.setFont(Font.font(20));\r\n        } else {\r\n            emptyChatLabel.setText(\"\");\r\n            for (ArrayList<Message> currentMessage : currentMessages) {\r\n                fieldForMessages.getChildren().add(makeMessage(currentMessage));\r\n            }\r\n        }\r\n    }\r\n\r\n    public void sendingMessage() throws Exception {\r\n        String text = textOfSending.getText();\r\n        sendMessage(text, User.MainUser.getNickname(), currentFriend.getNickname());\r\n        textOfSending.clear();\r\n    }\r\n\r\n    class TakeUserHandler implements EventHandler<ActionEvent> {\r\n        private final User user;\r\n        TakeUserHandler(User new_user) {\r\n            this.user = new_user;\r\n        }\r\n        @Override\r\n        public void handle(ActionEvent event) {\r\n            try {\r\n                makeChatToUser(user);\r\n            } catch (Exception e) {\r\n                // TODO Auto-generated catch block\r\n                e.printStackTrace();\r\n            }\r\n            System.out.print(user.getNickname());\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public Button generateUserField(User current){\r\n        Canvas canvas = new Canvas(160, 30);\r\n        GraphicsContext gc = canvas.getGraphicsContext2D();\r\n        gc.setTextBaseline(VPos.CENTER);\r\n        gc.setStroke(Color.BLACK);\r\n        gc.setFill(Color.WHITE);\r\n        gc.setLineWidth(1);\r\n        gc.fillRect(0, 0, 160, 30);\r\n        gc.setFill(Color.RED);\r\n        gc.fillRect(5, 5, 20, 20);\r\n        gc.setFill(Color.BLACK);\r\n        gc.setFont(new Font(15));\r\n        gc.fillText(\r\n                current.getNickname(),\r\n                Math.round(canvas.getWidth()  / 4),\r\n                Math.round(canvas.getHeight() / 2));\r\n        Button z1 = new Button(\"\");\r\n        z1.setMaxSize(162, 32);\r\n        z1.setMinSize(162, 32);\r\n        z1.setGraphic(canvas);\r\n        z1.setOnAction(new TakeUserHandler(current));\r\n        return z1;\r\n    }\r\n\r\n    public void initialize() throws Exception{\r\n        messagesList.setHbarPolicy(ScrollBarPolicy.NEVER);\r\n        messagesList.setVbarPolicy(ScrollBarPolicy.NEVER);\r\n        fieldForMessages.setSpacing(10);\r\n        ArrayList<User> users;\r\n        try{\r\n            users = Database.getChats();\r\n        }catch(Exception e){\r\n            return;\r\n        }\r\n        scrolling.setHbarPolicy(ScrollBarPolicy.NEVER);\r\n        scrolling.setVbarPolicy(ScrollBarPolicy.NEVER);\r\n        for(User user : users){\r\n            System.out.print(user.getNickname());\r\n            Button userButton = generateUserField(user);\r\n            chats.getChildren().add(userButton);\r\n        }\r\n        //chats.set\r\n        chats.setSpacing(10);\r\n        if(currentFriend != null){\r\n            makeChatToUser(currentFriend);\r\n        }\r\n    }\r\n\r\n    public void goToSettings(){\r\n        FXMLLoader loader = LoadXML.load(\"Scenes/Settings/SettingsPage.fxml\");\r\n        StartApplication.setScene(loader);\r\n    }\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Application/Scenes/ChatView/ChatViewController.java b/src/main/java/Application/Scenes/ChatView/ChatViewController.java
--- a/src/main/java/Application/Scenes/ChatView/ChatViewController.java	(revision 60e7dde13a1461dea61f42dc84d16e2642b132d2)
+++ b/src/main/java/Application/Scenes/ChatView/ChatViewController.java	(date 1653223047382)
@@ -53,9 +53,9 @@
 
     static User currentFriend = null;
 
-    public void makeChatToUser(User currentUser) throws Exception {        
-        friendAvatar = new ImageView(StartApplication.class.getResource("Images/default.png").toString());
-        // friendAvatar.setLocation
+    public void makeChatToUser(User currentUser) throws Exception {
+        Image a = new Image(StartApplication.class.getResource("Images/default.png").toString());
+        friendAvatar.setImage(a);
         currentFriend = currentUser;
         usersNick.setText(currentFriend.getNickname());
         fieldForMessages.getChildren().removeAll(fieldForMessages.getChildren());
